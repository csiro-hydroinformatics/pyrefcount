[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "refcount"
description = "Python classes for reference counting"
authors = [{name = "J-M", email = "jean-michel.perraud@csiro.au"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = []
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: Software Development",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "cffi>=1.17",
]

[project.urls]
Homepage = "https://csiro-hydroinformatics.github.io/pyrefcount"
Documentation = "https://csiro-hydroinformatics.github.io/pyrefcount"
Changelog = "https://csiro-hydroinformatics.github.io/pyrefcount/changelog"
Repository = "https://github.com/csiro-hydroinformatics/pyrefcount"
Issues = "https://github.com/csiro-hydroinformatics/pyrefcount/issues"
# Discussions = "https://github.com/csiro-hydroinformatics/pyrefcount/discussions"
# Gitter = "https://gitter.im/csiro-hydroinformatics/pyrefcount"
# Funding = "https://github.com/sponsors/jmp75"

[tool.pdm.version]
source = "call"
getter = "scripts.get_version:get_version"

[tool.pdm.build]
# I think I need the following to have dev package install in an environment (pip install -e)
package-dir = "src"
editable-backend = "editables"
# Include as much as possible in the source distribution, to help redistributors.
excludes = ["**/.pytest_cache"]
source-includes = [
    "config",
    "docs",
    "scripts",
    "share",
    "tests",
    "duties.py",
    "mkdocs.yml",
    "*.md",
    "LICENSE",
]

[tool.pdm.build.wheel-data]
# Manual pages can be included in the wheel.
# Depending on the installation tool, they will be accessible to users.
# pipx supports it, uv does not yet, see https://github.com/astral-sh/uv/issues/4731.
data = [
    {path = "share/**/*", relative-to = "."},
]

[tool.uv]
dev-dependencies = [
    # dev
    "editables>=0.5",
]

[dependency-groups]
dev = [
    # maintenance
    "build>=1.2",
    "git-changelog>=2.5",
    "twine>=5.1",

    # ci
    "duty>=1.4",
    "ruff>=0.4",
    "pytest>=8.2",
    "pytest-cov>=5.0",
    "pytest-randomly>=3.15",
    "pytest-xdist>=3.6",
    "mypy>=1.10",
    "types-markdown>=3.6",
    "types-pyyaml>=6.0",

    # docs
    "black>=24.4",
    "markdown-callouts>=0.4",
    "markdown-exec>=1.8",
    "mkdocs>=1.6",
    "mkdocs-coverage>=1.0",
    "mkdocs-gen-files>=0.5",
    "mkdocs-git-revision-date-localized-plugin>=1.2",
    "mkdocs-literate-nav>=0.6",
    "mkdocs-material>=9.5",
    "mkdocs-minify-plugin>=0.8",
    "mkdocstrings[python]>=0.25",
    # YORE: EOL 3.10: Remove line.
    "tomli>=2.0; python_version < '3.11'",
]