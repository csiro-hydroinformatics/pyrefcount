version: 1.0.{build}

image:
- Visual Studio 2019

platform: x64

environment:
  matrix:
      - PYTHON: "C:\\Python39-x64"
        PYTHON_VERSION: "3.9.x"
        ARCH: "64"
        # WINDOWS_SDK_VERSION: "v7.1"
        PLAT_NAME: "win-amd64"
        PY_TAG: "cp39"

branches:
  only:
  - main
  - testing


install:
  # Log out the python version just so we know it
  - ECHO "%PYTHON_VERSION%"

  # update path to use installed pip
  - set PATH=%PYTHON%\\scripts;%PATH%

  # Download things we absolutely need
  - pip install poetry cffi pytest

  # Now install refcount
  # - "%PYTHON%/python setup.py install"
  - poetry install

  - ECHO "Installed refcount!"

build_script:
- cmd: >-
    msbuild tests\test_native_library\test_native_library.sln /p:Platform="x64" /p:Configuration=Debug /consoleloggerparameters:Summary

test_script:
  # - "%PYTHON%/python run_tests.py"
  - poetry run pytest tests/ --cov=refcount --cov-report=xml
  # - poetry run mypy .

after_test:
  - ps: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -Outfile codecov.exe
        ./codecov.exe -f 'coverage.xml'
#   - ECHO "DONE!"
#   - ECHO "BUILDING WHEELS..."
#   - "%PYTHON%/python setup.py sdist bdist_wheel --plat-name=%PLAT_NAME% --python-tag=%PY_TAG%"
#   - ps: rm dist/*.egg

# artifacts:
#   - path: dist\*
#     name: pypiartifacts

# deploy_script:
#   - echo "Starting Artifact Deployment"
#   # populate pypirc file for twine
#   - echo [distutils]                                  > %USERPROFILE%\\.pypirc
#   - echo index-servers =                             >> %USERPROFILE%\\.pypirc
#   - echo     pypi                                    >> %USERPROFILE%\\.pypirc
#   - echo [pypi]                                      >> %USERPROFILE%\\.pypirc
#   - echo username=andrewannex                        >> %USERPROFILE%\\.pypirc
#   - echo password=%PYPI_PASSWORD%                    >> %USERPROFILE%\\.pypirc
#   # upload to pypi for windows
#   - set PATH=%BK_PATH%
#   - set HOME=%USERPROFILE%
#   - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" -And $env:APPVEYOR_REPO_BRANCH -eq "main") { Invoke-Expression "twine upload --skip-existing dist/*.whl" 2>$null } Else { write-output "Not on a tag on main, won't deploy to pypi"}
#   - echo "Finished Artifact Deployment"
# notifications:
#   - provider: Webhook
#     url: https://webhooks.gitter.im/e/3a0242522a806d39ba2b
# method: POST